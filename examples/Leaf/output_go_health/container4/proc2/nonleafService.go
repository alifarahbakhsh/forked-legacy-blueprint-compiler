// Blueprint: auto-generated by Blueprint Core
package proc2

import "spec/services"
import "log"
func GetnonleafService() *NonLeafServiceImplHandler {
	jaegertracer := NewjaegerTracer()
	leafservice_leafserviceimplclientpool_fn := func()*LeafServiceImplTracerClient{
		var leafservice_leafserviceimplrpcclient_neterr error
		var leafservice_leafserviceimplrpcclient_netclient *LeafServiceImplRPCClient
		for {
			leafservice_leafserviceimplrpcclient_netclient,leafservice_leafserviceimplrpcclient_neterr = NewLeafServiceImplRPCClient()
			if leafservice_leafserviceimplrpcclient_neterr == nil{
				break
			} else {
				log.Println(leafservice_leafserviceimplrpcclient_neterr)
			}
		}
		leafservice_leafserviceimplretrier := NewLeafServiceImplRetrier(leafservice_leafserviceimplrpcclient_netclient, "5")
		leafservice_leafserviceimpltracerclient := NewLeafServiceImplTracerClient(leafservice_leafserviceimplretrier, jaegertracer, "LeafService", "1")
		return leafservice_leafserviceimpltracerclient
	}
	leafservice_leafserviceimplclientpool := NewLeafServiceImplClientpool("100", leafservice_leafserviceimplclientpool_fn)
	leafservice_leafserviceimplclient := NewLeafServiceImplClient(leafservice_leafserviceimplclientpool)
	spec_handler := services.NewNonLeafServiceImpl(leafservice_leafserviceimplclient)
	nonleafserviceimpl := NewNonLeafServiceImpl(spec_handler)
	nonleafserviceimpltracer := NewNonLeafServiceImplTracer(nonleafserviceimpl, jaegertracer, "NonLeafService", "1")
	nonleafserviceimplhandler := NewNonLeafServiceImplHandler(nonleafserviceimpltracer, "grpc", "1s")
	return nonleafserviceimplhandler
}

func RunnonleafService(service *NonLeafServiceImplHandler) error{
return service.Run()
}

